// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package marketcenter

import (
	"github.com/dawn303/go-app/internal/marketcenter/biz"
	"github.com/dawn303/go-app/internal/marketcenter/server"
	"github.com/dawn303/go-app/internal/marketcenter/service"
	"github.com/dawn303/go-app/internal/marketcenter/store"
	"github.com/dawn303/go-app/internal/pkg/bootstrap"
	"github.com/dawn303/go-app/pkg/db"
	"github.com/go-kratos/kratos/v2"
)

// Injectors from wire.go:

func wireApp(appInfo *bootstrap.AppInfo, config *server.Config, mysqlOptions *db.MysqlOptions) (*kratos.App, func(), error) {
	logger := bootstrap.NewLogger(appInfo)
	appConfig := &bootstrap.AppConfig{
		Info:   appInfo,
		Logger: logger,
	}
	gormDB, err := db.NewMySQL(mysqlOptions)
	if err != nil {
		return nil, nil, err
	}
	datastore := store.NewStore(gormDB)
	bizBiz := biz.NewBiz(datastore)
	marketCenterService := service.NewMarketCenterService(bizBiz)
	httpServer := server.NewHTTPServer(config, marketCenterService, logger)
	v := server.NewServers(httpServer)
	app := bootstrap.NewApp(appConfig, v...)
	return app, func() {
	}, nil
}
